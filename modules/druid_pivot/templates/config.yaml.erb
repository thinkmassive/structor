<% @broker= eval(@nodes).select {|node| node[:roles].include? 'druid-broker'
                  }[0][:hostname] + "." + @domain;
 -%>

# The port on which the Pivot server will listen on.
port: 9095

# A Druid broker node that can serve data (only used if you have Druid based data source)
brokerHost: <%= @broker %>:8082

# Use SegmentMetadataQuery for introspection, rather than Broker GET routes.
useSegmentMetadata: true

# Foreground introspection
# Checks for new dataSources every time Pivot is loaded (default: false)
sourceListRefreshOnLoad: true

# Background introspection frequency (in ms)
# - Set to '0' to disable background introspection.
sourceListRefreshInterval: 30000

# Print logs to stdout, defaults to true.
enableStdoutLog: true

# Enable file logging, defaults to true.
enableFileLog: false

# Location for Pivot log files, defaults to '/var/log/pivot'
logDir: /var/log/pivot

# Max number of worker processes.
# - If omitted or set to 0, disable node.js clustering.
# - Set as 'auto' to spawn (number of CPUs - 1) workers.
# - Default is 0.
maxWorkers: 0

dataSources:
  - name: wikiticker-hdfs
    title: Wikiticker Quickstart
    engine: druid # Set the engine to druid
    source: wikiticker-hdfs # The druid dataSource

    timeAttribute: time # The time attribute (this needs to be set for Druid, but could be anything. You should leave it as 'time')

    # The refresh rule describes how often the data source looks for new data, it has to be fixed here since this data source is static
    refreshRule:
      rule: fixed # also possible: 'query' and 'realtime'
      time: 2015-09-13T00:00:00Z

    dimensions:
      - name: time
        type: TIME

      - name: channel

      - name: cityName

      - name: comment

      - name: countryIso
        title: Country ISO
        expression: $countryIsoCode

      - name: countryName

      - name: isAnonymous

      - name: isMinor

      - name: isNew

      - name: isRobot

      - name: isUnpatrolled

      - name: metroCode

      - name: namespace

      - name: page

      - name: regionIso
        title: Region ISO
        expression: $regionIsoCode

      - name: regionName

      - name: user

    measures:
      - name: count
        title: Edits
        expression: $main.sum($count)

      - name: delta

      - name: avg_delta
        expression: $main.sum($delta) / $main.sum($count)

      - name: added

      - name: avg_added
        expression: $main.sum($added) / $main.sum($count)

      - name: deleted

      - name: avg_deleted
        expression: $main.sum($deleted) / $main.sum($count)

      - name: unique_users
        title: Unique Users
        expression: $main.countDistinct($user_unique)

  - name: tpch-hdfs
    title: TPC-H Demo
    engine: druid # Set the engine to druid
    source: tpch-hdfs # The druid dataSource

    timeAttribute: time # The time attribute (this needs to be set for Druid, but could be anything. You should leave it as 'time')

    # The refresh rule describes how often the data source looks for new data, it has to be fixed here since this data source is static
    refreshRule:
      rule: fixed # also possible: 'query' and 'realtime'
      time: 2006-12-31T00:00:00Z

    dimensions:
      - name: OrderDate
        type: TIME

      - name: OrderStatus

      - name: OrderPriority

      - name: ProductName

      - name: ProductBrand

      - name: ProductType

      - name: SupplierName

      - name: NationName

      - name: NationRegionkey

    measures:
      - name: count
        expression: $main.sum($count)

      - name: LineitemQuantity
        expression: $main.sum($LineitemQuantity)

      - name: LineitemExtendedprice
        expression: $main.sum($LineitemExtendedprice)

      - name: LineitemDiscount
        expression: $main.sum($LineitemDiscount)

      - name: LineitemTax
        expression: $main.sum($LineitemTax)
