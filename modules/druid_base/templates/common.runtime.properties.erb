<% @zookeeper_servers = eval(@nodes).
      select {|node| node[:roles].include? 'zk'}.
      map{|node| node[:hostname] + "." + @domain + ":2181"}.join(",");
   @db = eval(@nodes).select {|node| node[:roles].include? 'hive-db'}[0][:hostname] + "." + @domain;
   @namenode = eval(@nodes).select {|node| node[:roles].include? 'nn'}[0][:hostname] + "." + @domain;
 -%>
#
# Extensions
#
druid.extensions.coordinates=["io.druid.extensions:druid-hdfs-storage", "io.druid.extensions:mysql-metadata-storage"]
druid.extensions.localRepository=dist/druid/extensions-repo
druid.extensions.remoteRepositories=[]

#
# Zookeeper
#
druid.zk.service.host=<%= @zookeeper_servers %>
druid.zk.paths.base=/druid

# For MySQL:
druid.metadata.storage.type=mysql
druid.metadata.storage.connector.connectURI=jdbc:mysql://<%= @db %>:3306/druid
druid.metadata.storage.connector.user=druid
druid.metadata.storage.connector.password=vagrant

# For PostgreSQL:
#druid.metadata.storage.type=postgresql
#druid.metadata.storage.connector.connectURI=jdbc:postgresql://db.example.com:5432/druid
#druid.metadata.storage.connector.user=...
#druid.metadata.storage.connector.password=...

#
# Deep storage
#
#druid.storage.type=local
#druid.storage.storageDirectory=var/druid/segments
#druid.indexer.logs.type=file
#druid.indexer.logs.directory=var/druid/indexing-logs

# For HDFS:
druid.storage.type=hdfs
druid.storage.storageDirectory=hdfs://<%= @namenode %>/apps/druid/segments
druid.indexer.logs.type=hdfs
druid.indexer.logs.directory=hdfs://<%= @namenode %>/apps/druid/indexing-logs

# For S3:
#druid.storage.type=s3
#druid.storage.bucket=your-bucket
#druid.storage.baseKey=druid/segments
#druid.s3.accessKey=...
#druid.s3.secretKey=...
#druid.indexer.logs.type=s3
#druid.indexer.logs.s3Bucket=your-bucket
#druid.indexer.logs.s3Prefix=druid/indexing-logs

#
# Service discovery
#
druid.selectors.indexing.serviceName=druid/overlord
druid.selectors.coordinator.serviceName=druid/coordinator

#
# Monitoring
#
#druid.monitoring.monitors=["com.metamx.metrics.JvmMonitor"]
druid.emitter=logging
druid.emitter.logging.logLevel=info

# Monitoring (disabled for examples, if you enable SysMonitor, make sure to include sigar jar in your cp)
# druid.monitoring.monitors=["com.metamx.metrics.SysMonitor","com.metamx.metrics.JvmMonitor"]
